name: Build Multi-Platform

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual trigger

jobs:
  build:
    strategy:
      matrix:
        platform:
          - os: windows-latest
            name: windows
            extension: .exe
          - os: macos-latest 
            name: macos
            extension: .app
          - os: ubuntu-latest
            name: linux
            extension: ""
        
    runs-on: ${{ matrix.platform.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Setup Node.js (if you have a frontend build process)
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    # Windows specific: Install dependencies
    - name: Install Windows dependencies
      if: matrix.platform.os == 'windows-latest'
      run: |
        choco install nsis
    
    # macOS specific: Install dependencies  
    - name: Install macOS dependencies
      if: matrix.platform.os == 'macos-latest'
      run: |
        brew install create-dmg
    
    # Linux specific: Install dependencies
    - name: Install Linux dependencies
      if: matrix.platform.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libwebkit2gtk-4.1-dev
    
    - name: Install Wails
      run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
    
    - name: Build application
      run: wails build
    
    - name: Prepare artifacts (Windows)
      if: matrix.platform.os == 'windows-latest'
      run: |
        mkdir artifacts
        copy "build\bin\lottery-app.exe" "artifacts\multiplier-wheel-${{ matrix.platform.name }}.exe"
    
    - name: Prepare artifacts (macOS)
      if: matrix.platform.os == 'macos-latest'
      run: |
        mkdir artifacts
        cp -r "build/bin/lottery-app.app" "artifacts/multiplier-wheel-${{ matrix.platform.name }}.app"
        # Create DMG
        create-dmg \
          --volname "Multiplier Wheel" \
          --window-pos 200 120 \
          --window-size 600 300 \
          --icon-size 100 \
          --icon "multiplier-wheel-${{ matrix.platform.name }}.app" 175 120 \
          --hide-extension "multiplier-wheel-${{ matrix.platform.name }}.app" \
          --app-drop-link 425 120 \
          "artifacts/multiplier-wheel-${{ matrix.platform.name }}.dmg" \
          "artifacts/"
    
    - name: Prepare artifacts (Linux)
      if: matrix.platform.os == 'ubuntu-latest'
      run: |
        mkdir artifacts
        cp "build/bin/lottery-app" "artifacts/multiplier-wheel-${{ matrix.platform.name }}"
        chmod +x "artifacts/multiplier-wheel-${{ matrix.platform.name }}"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: multiplier-wheel-${{ matrix.platform.name }}
        path: artifacts/
        retention-days: 30

  # Create a release when pushing tags
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          multiplier-wheel-windows/*
          multiplier-wheel-macos/*
          multiplier-wheel-linux/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}